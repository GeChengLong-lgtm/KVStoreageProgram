本项目是基于跳表的KV存储项目，用c++实现，它的功能包括对key-value的增加、删除、查询、设置过期时间等操作。数据库基于LRU算法对设置了过期时间的键值对进行管理。

# 项目中文件

* main.cpp 包含skiplist.h使用跳表进行数据操作
* skiplist.h 跳表核心实现
* dumpFile是保存程序运行的文件

# 接口：

* insertElement（插入数据）
* deleteElement（删除数据）
* searchElement（查询数据）
* displayList（展示已存数据）
* dumpFile（数据落盘）
* loadFile（加载数据）
* size（返回数据规模）

# 内容

1、实现了基于跳表的存储引擎，能够进行增加、删除、修改、查找键值对、设置过期时间等操作；
2、跳表使用泛型编程，支持int、string等基本类型，也可以通过重载运算符来支持自定义数据类型； 
3、基于LRU算法，通过哈希表和双链表实现了对设置了过期时间的键值对的管理；
4、实现了数据库对过期键值对进行定期删除和惰性删除的策略；
5、实现了对数据库周期性数据存盘的策略。

# 存储引擎数据表现

## 插入操作

跳表树高：18 

采用随机插入数据测试：


|插入数据规模（万条） |耗时（秒） | 
|---|---|
|10 |0.316763 |
|50 |1.86778 |
|100 |4.10648 |


每秒可处理写请求数（QPS）: 24.39w

## 取数据操作

|取数据规模（万条） |耗时（秒） | 
|---|---|
|10|0.47148 |10|
|50|2.56373 |50|
|100|5.43204 |100|

每秒可处理读请求数（QPS）: 18.41w
